extends ../../base/page

block content
    p.
        This page allows a fully custom action to be executed.#[br]
        #[br]
        An action affects money, !{__('in.names', { game: game.id })} and/or !{__('out.names', { game: game.id })} of
        players as configured below.

    br
    hr

    h1.header.wow.fadeInUp Player filters
    p Use filters to define which players are affected.

    label(for='field-selector-player-range-enable') Player range:
    select#field-selector-player-range-enable.collapsible-toggle(name='field-selector-player-range-enable', data-role='flipswitch', selected='selected', data-collapsible-toggle='#container-selector-player-range')
        option(value='false') NO
        option(value='true') YES

    div#container-selector-player-range(data-role='collapsible', data-inset='false')
        h4 Players range properties
        //- TODO: Set the maximum to the number of players in this game
        label(for='field-selector-players-range-limit') Amount of players:
        input#field-selector-players-range-limit(type='range', name='field-selector-player-range-limit', value='3', min='1', max='25', data-highlight='true')

        label(for='field-selector-player-range-order') Order:
        select#field-selector-player-range-order(name='field-selector-player-range-order', selected='selected')
            option(value='desc') Highest first
            option(value='asc') Lowest first

        label(for='field-selector-player-range-order-by') Order by:
        select#field-selector-player-range-order-by(name='field-selector-player-range-order-by', selected='selected')
            option(value='money') Money
            option(value='in')!= __('in.names', { capitalizeFirst: true, game: game.id })
            option(value='out')!= __('out.names', { capitalizeFirst: true, game: game.id })
            option(value='strength') Strength
            option(value='random') Random

    br
    br

    label(for='field-selector-team-range-enable') Team range:
    select#field-selector-team-range-enable.collapsible-toggle(name='field-selector-team-range-enable', data-role='flipswitch', selected='selected', data-collapsible-toggle='#container-selector-team-range')
        option(value='false') NO
        option(value='true') YES

    div#container-selector-team-range(data-role='collapsible', data-inset='false')
        h4 Team range properties
        //- TODO: Set the maximum to the number of teams in this game
        label(for='field-selector-team-range-limit') Amount of teams:
        input#field-selector-team-range-limit(type='range', name='field-selector-team-range-limit', value='1', min='1', max='5', data-highlight='true')

        label(for='field-selector-team-range-order') Order:
        select#field-selector-team-range-order(name='field-selector-team-range-order', selected='selected')
            option(value='desc') Highest first
            option(value='asc') Lowest first

        label(for='field-selector-team-range-order-by') Order by:
        select#field-selector-team-range-order-by(name='field-selector-team-range-order-by', selected='selected')
            option(value='money') Money
            option(value='factory')!= __('factory.name', { capitalizeFirst: true, game: game.id }) + ' count'
            option(value='in')!= 'Cumulative ' + __('in.names', { game: game.id })
            option(value='out')!= 'Cumulative ' + __('out.names', { game: game.id })
            option(value='strength') Cumulative player strength
            option(value='random') Random

    br
    br

    label(for='field-selector-player-enable') Specific players:
    select#field-selector-player-enable.collapsible-toggle(name='field-selector-player-enable', data-role='flipswitch', selected='selected', data-collapsible-toggle='#container-selector-player')
        option(value='false') NO
        option(value='true') YES

    div#container-selector-player(data-role='collapsible', data-inset='false')
        h4 Player selection

        //- Users list
        .user-list
            if game.users.length > 0
                each entry in game.users
                    input(type='checkbox', name='field-selector-player-user-' + entry.id, id='field-selector-player-user-' + entry.id)

                    //- Label with the avatar
                    label(for='field-selector-player-user-' + entry.id)
                        img.ui-thumbnail.ui-thumbnail-square(src=entry.avatarUrl)
                        | #{entry.firstName} #{entry.lastName}
            else
                p: i No players available...

    br
    br

    label(for='field-selector-team-enable') Specific teams:
    select#field-selector-team-enable.collapsible-toggle(name='field-selector-team-enable', data-role='flipswitch', selected='selected', data-collapsible-toggle='#container-selector-team')
        option(value='false') NO
        option(value='true') YES

    div#container-selector-team(data-role='collapsible', data-inset='false')
        h4 Team selection

        //- Users list
        .user-list
            if game.teams.length > 0
                each entry in game.teams
                    input(type='checkbox', name='field-selector-team-team-' + entry.id, id='field-selector-team-team-' + entry.id)
                    label(for='field-selector-team-team-' + entry.id)= entry.name
            else
                p: i No teams available...

    br
    br

    label(for='field-selector-range-enable') Range limit:
    select#field-selector-range-enable.collapsible-toggle(name='field-selector-range-enable', data-role='flipswitch', selected='selected', data-collapsible-toggle='#container-selector-range')
        option(value='false') NO
        option(value='true') YES

    div#container-selector-range(data-role='collapsible', data-inset='false')
        h4 Range properties
        p The range around your current position.

        label(for='field-selector-range-side') Side:
        select#field-selector-range-side(name='field-selector-range-side', selected='selected')
            option(value='false') Players inside the range
            option(value='true') Players outside the range

        label(for='field-selector-range-meters') Range meters:
        input#field-selector-range-meters(type='range', name='field-selector-range-meters', value='100', min='1', max='5000', data-highlight='true')

    br
    br

    label(for='field-selector-player-limit-enable') Player limit:
    select#field-selector-player-limit-enable.collapsible-toggle(name='field-selector-player-limit-enable', data-role='flipswitch', selected='selected', data-collapsible-toggle='#container-selector-player-limit')
        option(value='false') NO
        option(value='true') YES

    div#container-selector-player-limit(data-role='collapsible', data-inset='false')
        h4 Player limit properties

        //- TODO: Set the maximum to the number of players in this game
        label(for='field-selector-player-limit-limit') Player limit:
        input#field-selector-player-limit-limit(type='range', name='field-selector-player-limit-limit', value='3', min='1', max='25', data-highlight='true')
    br

    br
    hr

    h1.header.wow.fadeInUp Units
    p Define what units this action has effect on.

    input#field-unit-in(type='checkbox', name='field-unit-in')
    label(for='field-unit-in')!= __('in.names', { capitalizeFirst: true, game: game.id })

    input#field-unit-out(type='checkbox', name='field-unit-out')
    label(for='field-unit-out')!= __('out.names', { capitalizeFirst: true, game: game.id })

    input#field-unit-money(type='checkbox', name='field-unit-money')
    label(for='field-unit-money') Money

    br
    hr

    h1.header.wow.fadeInUp Amounts
    p Define what happens to the selected units.

    label(for='field-amount-type') Amount type:
    select#field-amount-type(name='field-amount-type')
        option(value='fixed') Fixed
        option(value='percentage') Percentage

    //- TODO: Show a slider here!
    label(for='field-amount-value') Amount value:
    input#field-amount-value(name='field-amount-value', value='0')

    br
    hr

    h1.header.wow.fadeInUp Message
    p Define the message shown to affected players.

    label(for='field-message-type') Message type:
    select#field-message-type(name='field-message-type')
        option(value='dynamic') Dynamic (automatic)
        option(value='custom') Custom
        option(value='none') None

    label(for='field-message-custom') Custom message:
    textarea#field-message-custom(name='field-message-custom')

    br
    hr

    .button-list
        a.ui-btn.ui-btn-raised.clr-primary.wow.fadeIn(title='Execute', data-ajax='false')
            i.zmdi.zmdi-flare.ui-pull-left
            | &nbsp;&nbsp;Execute
        a.ui-btn.wow.fadeIn(href='#', data-rel='back', data-direction='reverse', data-wow-delay='0.4s')
            i.zmdi.zmdi-undo.ui-pull-left
            | &nbsp;&nbsp;Cancel
