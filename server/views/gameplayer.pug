extends page

block content
    - var fadeDelay = -0.1;

    if game.users.category == null
        ul(data-role='listview')
            if game.users.count.requested > 0
                li.wow.fadeInUp(data-role='list-divider', data-wow-delay=(fadeDelay += 0.1) + 's') Unapproved users
                li: a.wow.fadeInUp(href=page.url + '/requested', data-transition='slide', data-wow-delay=(fadeDelay += 0.1) + 's') Users waiting approval...
                    span.ui-li-count()= game.users.count.requested

            li.wow.fadeInUp(data-role='list-divider', data-wow-delay=(fadeDelay += 0.1) + 's') Approved users
            li: a.wow.fadeInUp(href=page.url + '/players', data-transition='slide', data-wow-delay=(fadeDelay += 0.1) + 's') Team players...
                span.ui-li-count()= game.users.count.players
            li: a.wow.fadeInUp(href=page.url + '/specials', data-transition='slide', data-wow-delay=(fadeDelay += 0.1) + 's') Special players...
                span.ui-li-count()= game.users.count.specials
            li: a.wow.fadeInUp(href=page.url + '/spectators', data-transition='slide', data-wow-delay=(fadeDelay += 0.1) + 's') Spectators...
                span.ui-li-count()= game.users.count.spectators

            if game.users.count.requested == 0
                li: a.wow.fadeInUp(href=page.url + '/requested', data-transition='slide', data-wow-delay=(fadeDelay += 0.1) + 's') Requests...
                    span.ui-li-count()= game.users.count.requested

    else
        //- Change user role popup
        #popupChangeUserRole(data-role='popup')
            div(data-role='header')
                a.ui-btn.ui-btn-left.wow.fadeIn(href='#', data-rel='back', data-direction='reverse', data-wow-delay='0.4s')
                    i.zmdi.zmdi-close
                h1.nd-title Change roles

            div(data-role='content')
                p Please configure the roles for the selected users below.

                br
                label.select(for='field-team') Team
                if teams.teams.length === 0
                    select(name='field-team', id='field-team', data-native-menu='false', disabled='disabled')
                else
                    select(name='field-team', id='field-team', data-native-menu='false')
                        option(value='none') None
                        option(value='random', selected='selected') Random
                        option(disabled='disabled') ──────────
                        each team in teams.teams
                            option(value=team.id)= team.name

                //- Flip switches for special players and spectators
                br
                .row
                    .col-xs: .box
                        //- Flip switch for special players
                        label(for='field-special') Special player
                        select(name='field-special', id='field-special', data-role='flipswitch', selected='selected')
                            option(value='false') NO
                            option(value='true') YES

                    .col-xs: .box
                        //- Flip switch for spectators
                        label(for='field-spectator') Spectator
                        select(name='field-spectator', id='field-spectator', data-role='flipswitch', selected='selected')
                            option(value='false') NO
                            option(value='true') YES

                //- Game ID
                input(type='hidden', name='field-game', value=game.id)

                //- Action buttons
                br
                .button-list
                    a.ui-btn.clr-primary.action-apply(href='#', data-inline='true')
                        i.zmdi.zmdi-check
                        | &nbsp;&nbsp;Apply
                    a.ui-btn.action-cancel(href='#', data-rel='back', data-inline='true')
                        i.zmdi.zmdi-cancel
                        | &nbsp;Cancel



        h1.header.wow.fadeInUp(data-wow-delay=(fadeDelay += 0.1) + 's') Users

        //- Users list
        .user-list
            if game.users.users.length > 0
                each entry in game.users.users
                    .wow.fadeInUp(data-wow-delay=(fadeDelay += 0.1) + 's')
                        //- Checkbox, enabled or disabled based on the users' rights
                        if user.hasPermission
                            input(type='checkbox', name='checkbox-user-' + entry.id, id='checkbox-user-' + entry.id)
                        else
                            input(type='checkbox', name='checkbox-user-' + entry.id, id='checkbox-user-' + entry.id, disabled='disabled')

                        //- Label with the avatar
                        label(for='checkbox-user-' + entry.id)
                            img.ui-thumbnail.ui-thumbnail-square(src=entry.avatarUrl)
                            | #{entry.firstName} #{entry.lastName}

            else
                p.wow.fadeInUp.no-users(data-wow-delay=(fadeDelay += 0.1) + 's')
                    i No users here...

        //- Show the change roles button if the user has proper rights
        if game.users.users.length > 0
            br
            if user.hasPermission
                a.ui-btn.ui-btn-raised.clr-primary.action-change-user-roles.wow.fadeInUp(href='#popupChangeUserRole', data-rel='popup', data-position-to='window', data-transition='pop', data-wow-delay=(fadeDelay += 0.1) + 's') Change roles
